{"version":3,"sources":["test/unit/utils/response/parseResponse.test.js"],"names":["t","truthy","is","result","xml","responseMock","Codigo","Valor","ValorMaoPropria","ValorAvisoRecebimento","ValorValorDeclarado","Erro","MsgErro","ValorSemAdicionais","deepEqual"],"mappings":";;;;;AAGA;;;;AACA;;;;;;;;;;AAEA,mBAAK,+BAAL,EAAsC,UAACA,CAAD,EAAO;AAAA;;AACzCA,EAAAA,CAAC,CAACC,MAAF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACH,CAFD;AAIA,mBAAK,sCAAL,EAA6C,UAACD,CAAD,EAAO;AAChDA,EAAAA,CAAC,CAACE,EAAF,4FAA2B,UAA3B;AACH,CAFD;AAIA,mBAAK,qBAAL,EAA4B,UAACF,CAAD,EAAO;AAC/B,MAAMG,MAAM,GAAG,4mBAAf;AAoBAH,EAAAA,CAAC,CAACE,EAAF,QAAYC,MAAZ,yCAAYA,MAAZ,GAAoB,QAApB;AACH,CAtBD;AAwBA,mBAAK,gDAAL;AAAA;AAAA;AAAA,0BAAuD,iBAAOH,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAC7CI,YAAAA,GAD6C;AAAA;AAAA,mBAqB9B,0BAAcA,GAAd,CArB8B;;AAAA;AAqB7CD,YAAAA,MArB6C;AAsB7CE,YAAAA,YAtB6C,GAsB9B;AACjBC,cAAAA,MAAM,EAAE,OADS;AAEjBC,cAAAA,KAAK,EAAE,OAFU;AAGjBC,cAAAA,eAAe,EAAE,MAHA;AAIjBC,cAAAA,qBAAqB,EAAE,MAJN;AAKjBC,cAAAA,mBAAmB,EAAE,MALJ;AAMjBC,cAAAA,IAAI,EAAE,EANW;AAOjBC,cAAAA,OAAO,EAAE,EAPQ;AAQjBC,cAAAA,kBAAkB,EAAE;AARH,aAtB8B;AAiCnDb,YAAAA,CAAC,CAACc,SAAF,CAAYX,MAAZ,EAAoBE,YAApB;;AAjCmD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvD;;AAAA;AAAA;AAAA;AAAA","sourceRoot":"/home/tchaguitos/Documentos/projects/correios-rest","sourcesContent":["/* eslint-disable no-unused-expressions */\n/* eslint-disable no-unused-vars */\n\nimport test from 'ava';\nimport { parseResponse } from '../../../../src/utils';\n\ntest('method `parseResponse` exists', (t) => {\n    t.truthy(parseResponse);\n});\n\ntest('method `parseResponse` is a function', (t) => {\n    t.is(typeof parseResponse, 'function');\n});\n\ntest('result is an object', (t) => {\n    const result = parseResponse(`\n    <?xml version=\"1.0\" encoding=\"utf-8\"?>\n    <cResultado\n    xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xmlns=\"http://tempuri.org/\">\n    <Servicos>\n    <cServico>\n    <Codigo>40010</Codigo>\n    <Valor>49,62</Valor>\n    <ValorMaoPropria>0,00</ValorMaoPropria>\n    <ValorAvisoRecebimento>0,00</ValorAvisoRecebimento>\n    <ValorValorDeclarado>1,22</ValorValorDeclarado>\n    <Erro />\n    <MsgErro />\n    <ValorSemAdicionais>48,40</ValorSemAdicionais>\n    </cServico>\n    </Servicos>\n    </cResultado>`);\n    \n    t.is(typeof result, 'object');\n});\n\ntest('method `parseResponse` return the correct data', async (t) => {\n    const xml = `\n    <?xml version=\"1.0\" encoding=\"utf-8\"?>\n    <cResultado\n    xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xmlns=\"http://tempuri.org/\">\n    <Servicos>\n    <cServico>\n    <Codigo>40010</Codigo>\n    <Valor>49,62</Valor>\n    <ValorMaoPropria>0,00</ValorMaoPropria>\n    <ValorAvisoRecebimento>0,00</ValorAvisoRecebimento>\n    <ValorValorDeclarado>1,22</ValorValorDeclarado>\n    <Erro />\n    <MsgErro />\n    <ValorSemAdicionais>48,40</ValorSemAdicionais>\n    </cServico>\n    </Servicos>\n    </cResultado>`;\n    \n    const result = await parseResponse(xml);\n    const responseMock = {\n        Codigo: '40010',\n        Valor: '49,62',\n        ValorMaoPropria: '0,00',\n        ValorAvisoRecebimento: '0,00',\n        ValorValorDeclarado: '1,22',\n        Erro: '',\n        MsgErro: '',\n        ValorSemAdicionais: '48,40',\n    };\n    \n    t.deepEqual(result, responseMock);\n});\n\n"]}