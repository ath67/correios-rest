{"version":3,"sources":["test/functional/calcPrazoData.test.js"],"names":["t","requestMock","nCdServico","sCepOrigem","sCepDestino","sDtCalculo","responseMock","Codigo","PrazoEntrega","EntregaDomiciliar","EntregaSabado","Erro","MsgErro","obsFim","DataMaxEntrega","post","send","expect","res","is","status","deepEqual","body"],"mappings":";;AAGA;;;;AACA;;;;AACA;;;;;;;;;;AAEA,mBAAK,eAAL;AAAA;AAAA;AAAA,0BAAsB,iBAAOA,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAEZC,YAAAA,WAFY,GAEE;AAChBC,cAAAA,UAAU,EAAE,OADI;AAEhBC,cAAAA,UAAU,EAAE,UAFI;AAGhBC,cAAAA,WAAW,EAAE,UAHG;AAIhBC,cAAAA,UAAU,EAAE;AAJI,aAFF;AASZC,YAAAA,YATY,GASG;AACjBC,cAAAA,MAAM,EAAE,OADS;AAEjBC,cAAAA,YAAY,EAAE,GAFG;AAGjBC,cAAAA,iBAAiB,EAAE,GAHF;AAIjBC,cAAAA,aAAa,EAAE,GAJE;AAKjBC,cAAAA,IAAI,EAAE,EALW;AAMjBC,cAAAA,OAAO,EAAE,EANQ;AAOjBC,cAAAA,MAAM,EAAE,EAPS;AAQjBC,cAAAA,cAAc,EAAE;AARC,aATH;AAAA;AAAA,mBAoBA,yBAAQ,wBAAR,EACjBC,IADiB,CACZ,qBADY,EAEjBC,IAFiB,CAEZf,WAFY,EAGjBgB,MAHiB,CAGV,cAHU,EAGM,MAHN,EAIjBA,MAJiB,CAIV,GAJU,CApBA;;AAAA;AAoBZC,YAAAA,GApBY;AA0BlBlB,YAAAA,CAAC,CAACmB,EAAF,CAAKD,GAAG,CAACE,MAAT,EAAiB,GAAjB;AACApB,YAAAA,CAAC,CAACqB,SAAF,CAAYH,GAAG,CAACI,IAAhB,EAAsBhB,YAAtB;;AA3BkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtB;;AAAA;AAAA;AAAA;AAAA","sourceRoot":"/home/tchaguitos/Documentos/projects/correios-rest","sourcesContent":["/* eslint-disable no-unused-expressions */\n/* eslint-disable no-unused-vars */\n\nimport test from 'ava';\nimport request from 'supertest';\nimport app from '../../src/config/express';\n\ntest('CalcPrazoData', async (t) => {\n\n    const requestMock = {\n        nCdServico: '40010',\n        sCepOrigem: '37410220',\n        sCepDestino: '05311900',\n        sDtCalculo: '20/08/2018',\n    };\n    \n    const responseMock = {\n        Codigo: '40010',\n        PrazoEntrega: '2',\n        EntregaDomiciliar: 'S',\n        EntregaSabado: 'S',\n        Erro: '',\n        MsgErro: '',\n        obsFim: '',\n        DataMaxEntrega: '22/08/2018',\n    };\n    \n    const res = await request(app())\n    .post('/v1/calc-prazo-data')\n    .send(requestMock)\n    .expect('Content-Type', /json/)\n    .expect(200);\n    \n    t.is(res.status, 200);\n    t.deepEqual(res.body, responseMock);\n\n});\n"]}