"use strict";

var _ava = require("ava");

var _ava2 = _interopRequireDefault(_ava);

var _supertest = require("supertest");

var _supertest2 = _interopRequireDefault(_supertest);

var _express = require("../../src/config/express");

var _express2 = _interopRequireDefault(_express);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

(0, _ava2.default)('CalcPrazoData', function () {
  var _ref = _asyncToGenerator(
  /*#__PURE__*/
  regeneratorRuntime.mark(function _callee(t) {
    var requestMock, responseMock, res;
    return regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            requestMock = {
              nCdServico: '40010',
              sCepOrigem: '37410220',
              sCepDestino: '05311900',
              sDtCalculo: '20/08/2018'
            };
            responseMock = {
              Codigo: '40010',
              PrazoEntrega: '2',
              EntregaDomiciliar: 'S',
              EntregaSabado: 'S',
              Erro: '',
              MsgErro: '',
              obsFim: '',
              DataMaxEntrega: '22/08/2018'
            };
            _context.next = 4;
            return (0, _supertest2.default)((0, _express2.default)()).post('/v1/calc-prazo-data').send(requestMock).expect('Content-Type', /json/).expect(200);

          case 4:
            res = _context.sent;
            t.is(res.status, 200);
            t.deepEqual(res.body, responseMock);

          case 7:
          case "end":
            return _context.stop();
        }
      }
    }, _callee, this);
  }));

  return function (_x) {
    return _ref.apply(this, arguments);
  };
}());
//# sourceMappingURL=/home/tchaguitos/Documentos/projects/correios-rest/node_modules/.cache/ava/e0e6e59cf7cdf27717545ef865eb0d35.js.map